# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddLinkInput {
  title: String!
  url: String!
}

type AddLinkResponse {
  link: Link!
  page: Page!
}

type ChangePasswordResponse {
  success: Boolean!
}

input EditLinkInput {
  id: Int!
  title: String
  url: String
}

type EditLinkResponse {
  link: Link!
  page: Page!
}

type ForgotPasswordResponse {
  success: Boolean!
}

type Link {
  id: Int!
  sortOrder: Int!
  title: String!
  url: String!
}

type LoginResponse {
  accessToken: String!
  refreshToken: String!
}

type Mutation {
  addLink(input: AddLinkInput!): AddLinkResponse!
  changePassword(password: String!): ChangePasswordResponse!
  editLink(input: EditLinkInput!): EditLinkResponse!
  forgotPassword(email: String!): ForgotPasswordResponse!
  login(email: String!, password: String!): LoginResponse!
  recoverPassword(input: RecoverPasswordInput!): RecoverPasswordResponse!
  refreshToken(token: String!): RefreshTokenResponse!
  removeLink(linkId: Int!): RemoveLinkResponse!
  signup(input: SignupInput!): SignupResponse!
  sortLinks(linkIds: [Int!]!): SortLinkResponse!
  updatePage(input: UpdatePageInput!): UpdatePageResponse!
  updateProfile(input: UpdateProfileInput!): UpdateProfileResponse!
  uploadImage(image: String!): UploadImageResponse!
}

type Owner {
  avatarUrl: String
  name: String!
  social: [SocialLink!]!
}

type Page {
  id: Int!
  links: [Link!]!
  owner: Owner!
  slug: String!
  theme: PageTheme!
}

enum PageTheme {
  DARK
  FOREST
  LIGHT
  PINK
  RED
  TAN
}

type Query {
  page(slug: String!): Page
  user: User!
}

input RecoverPasswordInput {
  newPassword: String!
  recoveryToken: String!
  slug: String!
}

type RecoverPasswordResponse {
  accessToken: String!
  refreshToken: String!
}

type RefreshTokenResponse {
  accessToken: String!
  refreshToken: String!
}

type RemoveLinkResponse {
  link: Link!
  page: Page!
}

input SignupInput {
  email: String!
  name: String!
  password: String!
  slug: String!
}

type SignupResponse {
  accessToken: String!
  refreshToken: String!
}

type SocialLink {
  kind: SocialLinkKind!
  url: String!
  username: String!
}

enum SocialLinkKind {
  FACEBOOK
  INSTAGRAM
  LINKEDIN
  REDDIT
  TIKTOK
  TWITTER
  YOUTUBE
}

type SortLinkResponse {
  page: Page!
}

input UpdatePageInput {
  theme: PageTheme
}

type UpdatePageResponse {
  page: Page!
}

input UpdateProfileInput {
  avatarUrl: String
  name: String
  social: [UpdateProfileSocialsInput!]
}

type UpdateProfileResponse {
  user: User!
}

input UpdateProfileSocialsInput {
  kind: SocialLinkKind!
  value: String!
}

type UploadImageResponse {
  slug: String!
}

type User {
  id: Int!
  page: Page!
  role: UserRole!
  social: [SocialLink!]!
}

enum UserRole {
  ADMIN
  USER
}
