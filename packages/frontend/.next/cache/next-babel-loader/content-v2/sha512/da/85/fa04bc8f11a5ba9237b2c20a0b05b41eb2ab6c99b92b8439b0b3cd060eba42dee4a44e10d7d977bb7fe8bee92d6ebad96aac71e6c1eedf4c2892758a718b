{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/luca/code/lucapasquale/linking-bio/packages/frontend/src/modules/Admin/routes/Home/components/SortableLinks/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ReactSortable } from 'react-sortablejs';\nimport { sortLinksMutation } from './graphql/sort-links';\nimport { LinkItem } from './LinkItem';\nexport var SortableLinks = function SortableLinks(_ref) {\n  _s();\n\n  var page = _ref.page;\n\n  var _sortLinksMutation = sortLinksMutation(),\n      _sortLinksMutation2 = _slicedToArray(_sortLinksMutation, 1),\n      sortLinks = _sortLinksMutation2[0];\n\n  var _useState = useState(page.links),\n      links = _useState[0],\n      setLinks = _useState[1];\n\n  var onDragEnd = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(evt.oldIndex === evt.newIndex)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.next = 4;\n              return sortLinks({\n                variables: {\n                  linkIds: links.map(function (link) {\n                    return link.id;\n                  })\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onDragEnd(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(ReactSortable, {\n    list: links,\n    setList: setLinks,\n    onEnd: onDragEnd,\n    handle: \".dragable\",\n    children: links.map(function (link) {\n      return /*#__PURE__*/_jsxDEV(LinkItem, {\n        link: link\n      }, link.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SortableLinks, \"gDjwxXd5UCC5i/dwjiu91OSOvdg=\");\n\n_c = SortableLinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortableLinks\");","map":{"version":3,"sources":["/home/luca/code/lucapasquale/linking-bio/packages/frontend/src/modules/Admin/routes/Home/components/SortableLinks/index.tsx"],"names":["React","useState","ReactSortable","sortLinksMutation","LinkItem","SortableLinks","page","sortLinks","links","setLinks","onDragEnd","evt","oldIndex","newIndex","variables","linkIds","map","link","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA6C,kBAA7C;AAIA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAMA,OAAO,IAAMC,aAAwB,GAAG,SAA3BA,aAA2B,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,2BAChCH,iBAAiB,EADe;AAAA;AAAA,MAC7CI,SAD6C;;AAAA,kBAE1BN,QAAQ,CAACK,IAAI,CAACE,KAAN,CAFkB;AAAA,MAE7CA,KAF6C;AAAA,MAEtCC,QAFsC;;AAIpD,MAAMC,SAAS;AAAA,yEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZA,GAAG,CAACC,QAAJ,KAAiBD,GAAG,CAACE,QADT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,qBAKVN,SAAS,CAAC;AACdO,gBAAAA,SAAS,EAAE;AAAEC,kBAAAA,OAAO,EAAEP,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD;AAAA,2BAAUA,IAAI,CAACC,EAAf;AAAA,mBAAV;AAAX;AADG,eAAD,CALC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATR,SAAS;AAAA;AAAA;AAAA,KAAf;;AAUA,sBACE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAEF,KAArB;AAA4B,IAAA,OAAO,EAAEC,QAArC;AAA+C,IAAA,KAAK,EAAEC,SAAtD;AAAiE,IAAA,MAAM,EAAC,WAAxE;AAAA,cACGF,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD;AAAA,0BACT,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CArBM;;GAAMb,a;;KAAAA,a","sourcesContent":["import React, { FC, useState } from 'react'\nimport { ReactSortable, SortableEvent } from 'react-sortablejs'\n\nimport { User } from '~Admin/graphql/user-page'\n\nimport { sortLinksMutation } from './graphql/sort-links'\nimport { LinkItem } from './LinkItem'\n\ntype Props = {\n  page: User['page']\n}\n\nexport const SortableLinks: FC<Props> = ({ page }) => {\n  const [sortLinks] = sortLinksMutation()\n  const [links, setLinks] = useState(page.links)\n\n  const onDragEnd = async (evt: SortableEvent) => {\n    if (evt.oldIndex === evt.newIndex) {\n      return\n    }\n\n    await sortLinks({\n      variables: { linkIds: links.map((link) => link.id) },\n    })\n  }\n\n  return (\n    <ReactSortable list={links} setList={setLinks} onEnd={onDragEnd} handle=\".dragable\">\n      {links.map((link) => (\n        <LinkItem key={link.id} link={link} />\n      ))}\n    </ReactSortable>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}