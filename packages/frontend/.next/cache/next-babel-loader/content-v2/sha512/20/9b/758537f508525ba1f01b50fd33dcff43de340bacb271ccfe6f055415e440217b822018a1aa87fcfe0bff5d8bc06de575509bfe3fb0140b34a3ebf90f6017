{"ast":null,"code":"/** All built-in and custom scalars, mapped to their actual values */\nexport let SocialLinkKind;\n\n(function (SocialLinkKind) {\n  SocialLinkKind[\"Facebook\"] = \"FACEBOOK\";\n  SocialLinkKind[\"Instagram\"] = \"INSTAGRAM\";\n  SocialLinkKind[\"Linkedin\"] = \"LINKEDIN\";\n  SocialLinkKind[\"Reddit\"] = \"REDDIT\";\n  SocialLinkKind[\"Tiktok\"] = \"TIKTOK\";\n  SocialLinkKind[\"Twitter\"] = \"TWITTER\";\n  SocialLinkKind[\"Youtube\"] = \"YOUTUBE\";\n})(SocialLinkKind || (SocialLinkKind = {}));\n\nexport let PageTheme;\n\n(function (PageTheme) {\n  PageTheme[\"Dark\"] = \"DARK\";\n  PageTheme[\"Light\"] = \"LIGHT\";\n  PageTheme[\"Red\"] = \"RED\";\n  PageTheme[\"Pink\"] = \"PINK\";\n  PageTheme[\"Tan\"] = \"TAN\";\n  PageTheme[\"Forest\"] = \"FOREST\";\n})(PageTheme || (PageTheme = {}));","map":{"version":3,"sources":["/home/luca/code/lucapasquale/linking-bio/packages/frontend/src/helpers/graphql/generated.ts"],"names":["SocialLinkKind","PageTheme"],"mappings":"AAEA;AAgBA,WAAYA,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAkCZ,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S","sourcesContent":["export type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type SocialLink = {\n  __typename?: 'SocialLink';\n  kind: SocialLinkKind;\n  username: Scalars['String'];\n  url: Scalars['String'];\n};\n\nexport enum SocialLinkKind {\n  Facebook = 'FACEBOOK',\n  Instagram = 'INSTAGRAM',\n  Linkedin = 'LINKEDIN',\n  Reddit = 'REDDIT',\n  Tiktok = 'TIKTOK',\n  Twitter = 'TWITTER',\n  Youtube = 'YOUTUBE'\n}\n\nexport type User = {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  social: Array<SocialLink>;\n  page: Page;\n};\n\nexport type Link = {\n  __typename?: 'Link';\n  id: Scalars['ID'];\n  title: Scalars['String'];\n  url: Scalars['String'];\n  sortOrder: Scalars['Int'];\n};\n\nexport type Page = {\n  __typename?: 'Page';\n  id: Scalars['ID'];\n  slug: Scalars['String'];\n  theme: PageTheme;\n  owner: Owner;\n  links: Array<Link>;\n};\n\nexport enum PageTheme {\n  Dark = 'DARK',\n  Light = 'LIGHT',\n  Red = 'RED',\n  Pink = 'PINK',\n  Tan = 'TAN',\n  Forest = 'FOREST'\n}\n\nexport type Owner = {\n  __typename?: 'Owner';\n  name: Scalars['String'];\n  avatarUrl?: Maybe<Scalars['String']>;\n  social: Array<SocialLink>;\n};\n\nexport type UpdatePageResponse = {\n  __typename?: 'UpdatePageResponse';\n  page: Page;\n};\n\nexport type UpdateProfileResponse = {\n  __typename?: 'UpdateProfileResponse';\n  user: User;\n};\n\nexport type SignupResponse = {\n  __typename?: 'SignupResponse';\n  accessToken: Scalars['String'];\n  refreshToken: Scalars['String'];\n};\n\nexport type LoginResponse = {\n  __typename?: 'LoginResponse';\n  accessToken: Scalars['String'];\n  refreshToken: Scalars['String'];\n};\n\nexport type ChangePasswordResponse = {\n  __typename?: 'ChangePasswordResponse';\n  success: Scalars['Boolean'];\n};\n\nexport type ForgotPasswordResponse = {\n  __typename?: 'ForgotPasswordResponse';\n  success: Scalars['Boolean'];\n};\n\nexport type RecoverPasswordResponse = {\n  __typename?: 'RecoverPasswordResponse';\n  accessToken: Scalars['String'];\n  refreshToken: Scalars['String'];\n};\n\nexport type RefreshTokenResponse = {\n  __typename?: 'RefreshTokenResponse';\n  accessToken: Scalars['String'];\n  refreshToken: Scalars['String'];\n};\n\nexport type AddLinkResponse = {\n  __typename?: 'AddLinkResponse';\n  page: Page;\n  link: Link;\n};\n\nexport type EditLinkResponse = {\n  __typename?: 'EditLinkResponse';\n  page: Page;\n  link: Link;\n};\n\nexport type RemoveLinkResponse = {\n  __typename?: 'RemoveLinkResponse';\n  page: Page;\n  link: Link;\n};\n\nexport type SortLinkResponse = {\n  __typename?: 'SortLinkResponse';\n  page: Page;\n};\n\nexport type UploadImageResponse = {\n  __typename?: 'UploadImageResponse';\n  slug: Scalars['String'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  page?: Maybe<Page>;\n  user: User;\n};\n\n\nexport type QueryPageArgs = {\n  slug: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  updatePage: UpdatePageResponse;\n  updateProfile: UpdateProfileResponse;\n  signup: SignupResponse;\n  login: LoginResponse;\n  changePassword: ChangePasswordResponse;\n  forgotPassword: ForgotPasswordResponse;\n  recoverPassword: RecoverPasswordResponse;\n  refreshToken: RefreshTokenResponse;\n  addLink: AddLinkResponse;\n  editLink: EditLinkResponse;\n  removeLink: RemoveLinkResponse;\n  sortLinks: SortLinkResponse;\n  uploadImage: UploadImageResponse;\n};\n\n\nexport type MutationUpdatePageArgs = {\n  input: UpdatePageInput;\n};\n\n\nexport type MutationUpdateProfileArgs = {\n  input: UpdateProfileInput;\n};\n\n\nexport type MutationSignupArgs = {\n  input: SignupInput;\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationChangePasswordArgs = {\n  password: Scalars['String'];\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationRecoverPasswordArgs = {\n  input: RecoverPasswordInput;\n};\n\n\nexport type MutationRefreshTokenArgs = {\n  token: Scalars['String'];\n};\n\n\nexport type MutationAddLinkArgs = {\n  input: AddLinkInput;\n};\n\n\nexport type MutationEditLinkArgs = {\n  input: EditLinkInput;\n};\n\n\nexport type MutationRemoveLinkArgs = {\n  linkId: Scalars['ID'];\n};\n\n\nexport type MutationSortLinksArgs = {\n  linkIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationUploadImageArgs = {\n  image: Scalars['String'];\n};\n\nexport type UpdatePageInput = {\n  theme?: Maybe<PageTheme>;\n};\n\nexport type UpdateProfileInput = {\n  name?: Maybe<Scalars['String']>;\n  avatarUrl?: Maybe<Scalars['String']>;\n  social?: Maybe<Array<UpdateProfileSocialsInput>>;\n};\n\nexport type UpdateProfileSocialsInput = {\n  kind: SocialLinkKind;\n  value: Scalars['String'];\n};\n\nexport type SignupInput = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  slug: Scalars['String'];\n  name: Scalars['String'];\n};\n\nexport type RecoverPasswordInput = {\n  slug: Scalars['String'];\n  newPassword: Scalars['String'];\n  recoveryToken: Scalars['String'];\n};\n\nexport type AddLinkInput = {\n  title: Scalars['String'];\n  url: Scalars['String'];\n};\n\nexport type EditLinkInput = {\n  id: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  url?: Maybe<Scalars['String']>;\n};\n\nexport type RefreshTokenMutationVariables = Exact<{\n  token: Scalars['String'];\n}>;\n\n\nexport type RefreshTokenMutation = (\n  { __typename?: 'Mutation' }\n  & { refreshToken: (\n    { __typename?: 'RefreshTokenResponse' }\n    & Pick<RefreshTokenResponse, 'accessToken' | 'refreshToken'>\n  ) }\n);\n\nexport type UserSlugQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserSlugQuery = (\n  { __typename?: 'Query' }\n  & { user: (\n    { __typename?: 'User' }\n    & Pick<User, 'id'>\n    & { page: (\n      { __typename?: 'Page' }\n      & Pick<Page, 'slug'>\n    ) }\n  ) }\n);\n\nexport type UserPageQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserPageQuery = (\n  { __typename?: 'Query' }\n  & { user: (\n    { __typename?: 'User' }\n    & Pick<User, 'id'>\n    & { page: (\n      { __typename?: 'Page' }\n      & Pick<Page, 'slug' | 'theme'>\n      & { owner: (\n        { __typename?: 'Owner' }\n        & Pick<Owner, 'name' | 'avatarUrl'>\n        & { social: Array<(\n          { __typename?: 'SocialLink' }\n          & Pick<SocialLink, 'kind' | 'username' | 'url'>\n        )> }\n      ), links: Array<(\n        { __typename?: 'Link' }\n        & Pick<Link, 'id' | 'url' | 'title' | 'sortOrder'>\n      )> }\n    ) }\n  ) }\n);\n\nexport type SortLinksMutationVariables = Exact<{\n  linkIds: Array<Scalars['ID']>;\n}>;\n\n\nexport type SortLinksMutation = (\n  { __typename?: 'Mutation' }\n  & { sortLinks: (\n    { __typename?: 'SortLinkResponse' }\n    & { page: (\n      { __typename?: 'Page' }\n      & { links: Array<(\n        { __typename?: 'Link' }\n        & Pick<Link, 'id' | 'title' | 'sortOrder'>\n      )> }\n    ) }\n  ) }\n);\n\nexport type AddLinkMutationVariables = Exact<{\n  input: AddLinkInput;\n}>;\n\n\nexport type AddLinkMutation = (\n  { __typename?: 'Mutation' }\n  & { addLink: (\n    { __typename?: 'AddLinkResponse' }\n    & { link: (\n      { __typename?: 'Link' }\n      & Pick<Link, 'id' | 'url' | 'title'>\n    ), page: (\n      { __typename?: 'Page' }\n      & Pick<Page, 'slug'>\n    ) }\n  ) }\n);\n\nexport type EditLinkMutationVariables = Exact<{\n  input: EditLinkInput;\n}>;\n\n\nexport type EditLinkMutation = (\n  { __typename?: 'Mutation' }\n  & { editLink: (\n    { __typename?: 'EditLinkResponse' }\n    & { link: (\n      { __typename?: 'Link' }\n      & Pick<Link, 'id' | 'url' | 'title'>\n    ), page: (\n      { __typename?: 'Page' }\n      & Pick<Page, 'slug'>\n    ) }\n  ) }\n);\n\nexport type RemoveLinkMutationVariables = Exact<{\n  linkId: Scalars['ID'];\n}>;\n\n\nexport type RemoveLinkMutation = (\n  { __typename?: 'Mutation' }\n  & { removeLink: (\n    { __typename?: 'RemoveLinkResponse' }\n    & { link: (\n      { __typename?: 'Link' }\n      & Pick<Link, 'id'>\n    ), page: (\n      { __typename?: 'Page' }\n      & Pick<Page, 'slug'>\n    ) }\n  ) }\n);\n\nexport type ChangePasswordMutationVariables = Exact<{\n  password: Scalars['String'];\n}>;\n\n\nexport type ChangePasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { changePassword: (\n    { __typename?: 'ChangePasswordResponse' }\n    & Pick<ChangePasswordResponse, 'success'>\n  ) }\n);\n\nexport type UpdateProfileMutationVariables = Exact<{\n  input: UpdateProfileInput;\n}>;\n\n\nexport type UpdateProfileMutation = (\n  { __typename?: 'Mutation' }\n  & { updateProfile: (\n    { __typename?: 'UpdateProfileResponse' }\n    & { user: (\n      { __typename?: 'User' }\n      & Pick<User, 'id'>\n    ) }\n  ) }\n);\n\nexport type UploadImageMutationVariables = Exact<{\n  image: Scalars['String'];\n}>;\n\n\nexport type UploadImageMutation = (\n  { __typename?: 'Mutation' }\n  & { uploadImage: (\n    { __typename?: 'UploadImageResponse' }\n    & Pick<UploadImageResponse, 'slug'>\n  ) }\n);\n\nexport type UpdatePageMutationVariables = Exact<{\n  input: UpdatePageInput;\n}>;\n\n\nexport type UpdatePageMutation = (\n  { __typename?: 'Mutation' }\n  & { updatePage: (\n    { __typename?: 'UpdatePageResponse' }\n    & { page: (\n      { __typename?: 'Page' }\n      & Pick<Page, 'slug' | 'theme'>\n    ) }\n  ) }\n);\n\nexport type ForgotPasswordMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type ForgotPasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { forgotPassword: (\n    { __typename?: 'ForgotPasswordResponse' }\n    & Pick<ForgotPasswordResponse, 'success'>\n  ) }\n);\n\nexport type EmailLoginMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type EmailLoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'accessToken' | 'refreshToken'>\n  ) }\n);\n\nexport type RecoverPasswordMutationVariables = Exact<{\n  input: RecoverPasswordInput;\n}>;\n\n\nexport type RecoverPasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { recoverPassword: (\n    { __typename?: 'RecoverPasswordResponse' }\n    & Pick<RecoverPasswordResponse, 'accessToken' | 'refreshToken'>\n  ) }\n);\n\nexport type EmailSignupMutationVariables = Exact<{\n  input: SignupInput;\n}>;\n\n\nexport type EmailSignupMutation = (\n  { __typename?: 'Mutation' }\n  & { signup: (\n    { __typename?: 'SignupResponse' }\n    & Pick<SignupResponse, 'accessToken' | 'refreshToken'>\n  ) }\n);\n\nexport type GetPageQueryVariables = Exact<{\n  slug: Scalars['String'];\n}>;\n\n\nexport type GetPageQuery = (\n  { __typename?: 'Query' }\n  & { page?: Maybe<(\n    { __typename?: 'Page' }\n    & Pick<Page, 'slug' | 'theme'>\n    & { owner: (\n      { __typename?: 'Owner' }\n      & Pick<Owner, 'name' | 'avatarUrl'>\n      & { social: Array<(\n        { __typename?: 'SocialLink' }\n        & Pick<SocialLink, 'kind' | 'username' | 'url'>\n      )> }\n    ), links: Array<(\n      { __typename?: 'Link' }\n      & Pick<Link, 'id' | 'url' | 'title' | 'sortOrder'>\n    )> }\n  )> }\n);\n"]},"metadata":{},"sourceType":"module"}